<div id="Overview" class="blurbSummary grid_12">
  <div class="blurbTitle">Overview</div>
  <div class="p">
    Conveyor is a high level specification dealing with the capture and
    implementation of workflows, especially for the purpose of automating and
    improving efficiencies within a project or organization. Conveyor embeds a
    broad range of business activity in program logic in much the same way
    that an assembly lines emded physical manufacture processes within capital
    equipment and physical layout.
  </div>
  <div class="p">
    Conveyor itself is a foundational technology used <span data-todo="Link
    this line to a page... /dossier/?tag=conveyor-users or something that will
    list known companies and projects.">to build consumer products and
    services.</span> In this sense, Conveyor is like injection-molding. It's
    an important technology usable in millions of toys and gadgets, but not
    something most consumers concern themseles with.<span data-todo="Address
    to general audience only."> The remainder of the Conveyor documentation
    digs into the technical aspects of Conveyor and is addressed primarily to
    Conveyor developers.</span>
  </div>
</div><!-- #Overview.blurbSummary -->
<div id="High-Level-Components" class="blurbSummary grid_12">
  <div class="blurbTitle">High Level Components</div>
  <div class="p">
    Just as 'the assembly line' was not a single thing, but rather the
    synthesis of many existing ideas with a few technical innovations and a
    lot of trial and error, Conveyor organizes existing technologies and ideas
    into a system derived as much from experience as theory with the goal of
    making the overall process more transparent, testable, iterable and
    opening the process to broader engagement by simplifying individual touch
    points.
  </div>
  <div class="p">
    An explicit note on usage: when introducing Conveyor specific technical
    terms, the 'Conveyor' association <em>should</em> be explictly stated in
    the first usage in the page, section, or if reasonably distant from the
    last such fully qualified usage. After establishing intent,
    'Conveyor' <em>should</em> be dropped from further references unless an
    explicit distinction needs to be made against usage of the term in another
    sense such as "the Conveyor Ecosystems themselves form a
    'super-ecosystem'". Otherwise, we would refer to the Conveyor Ecosystems
    simply as 'Ecosystems' after the initial introduction.
  </div>
  <div class="subHeader"><span>Literate Development</span></div>
  <div class="p">
    Conveyor incorporates
    <a href="/documentation/literate-development/Primer">Literate
    Development</a> and techniques to construct documentation that is both
    comprehensive and approachable. Conveyor applies these standards to itself
    and <span data-todo="Expand on this point.">Conveyor derived
    products</span>.
  </div>
  <div class="subHeader"><span>Ecosystems</span></div>
  <div class="p">
    A Conveyor Ecosystem is a sovereign virtual space composed of
    infrastructure and <a href="#Actors">Actors</a> collectively contributing
    talents and capabilities towards the achievement of declared
    goals. Ecosystems are most typically organized around legal entities and
    are may be categorized as personal Ecosystems, corporate ecosystems,
    organizational ecosystems, etc. Ecosystems themselves can interactive
    amongst themselves, and you could for instance have a contract developer's
    personal Ecosystem engaged with multiple employer's corporate ecosystems,
    which may themselves be divided into departmental ecosystems for lager
    firms.
  </div>
  <div class="subHeader"><span>Hosts</span></div>
  <div class="p">
    A Conveyor Host is a computer set up to enable it to host Conveyor
    services. Hosts may be categorized as 'physical' or 'virtual' as well as
    by function.
  </div>
  <div class="p">
    The particular use and function of hosts is determined by the ecosystem to
    which it is attached and therefore out of scope of this
    documentation. (TODO: It's an open question whether a given host willb e
    strictly limited to a single ecosystem, or whether it may act in multilpe
    ecosystems and merely 'belong' in some sense to a primary ecosystem). In
    most cases, the 'best pracitce' would be to use physical hosts to host
    virtual hosts and networked data volumes, with all further operations (web
    servers, mail servers, ecosystem agents, etc.) handled by virtual
    hosts. This approach generally works well operations and turns out to be
    useful WRT to scaling, disaster recovery, and general host management.
  </div>
  <div class="subHeader"><span>Actors</span></div>
  <div class="p">
    An 'actor' may be a human or virtual entity, and is generally regarded as
    anything which may makes decisions. Actors may be further categorized as
    internal or external to the ecosystem. Internal actors, also called
    'agents', are always automated virtual entities. Essentially, bits of code
    empowered to make decisions according to ecosystem conditions and their
    own internal logic.  An external actor may be a human or virtual entity,
    though as far as the ecosystem is concerned, it doesn't matter
    much.<span class="note">Functionally, any entity which can authenticate to
    the ecosystem can do whatever it's authorizations allows. Ecosystem policy
    may define limitations or differences between human and virtual entities
    as a matter of policy.</span>
  </div>
  <div class="subHeader"><span>Project</span></div>
  <div class="p">
    Ecosystems are sovereign areas, ruled by a single cohesive set of policies
    and rules. Ecosystems are generally associated with a company or
    individual and embody long term goals and accumulated policy and
    knowledge. Hosts are like virtual real estate and capital equipment; hosts
    are where things happen, where data is stored. Actors do things within the
    ecosystem.  Projects are where specific hosts and actors are organized
    towards specific goals which are realized as work products.
  </div>
  <div class="subHeader"><span>Work Product</span></div>
  <div class="p">
    Work products are the output of projects. Many work proudcts exist
    entirely within the Conveyor universe as documentation or code artifacts
    and such. The final work product may also be a physical thing, like a
    chair or car or a printed book, etc. In this case, the project will track
    or otherwise retain information about these physical products so the
    Conveyor process may continue to work with the items throughout their
    life. This may include tracking serial numbers and attaching them to
    warranties or repair history, etc.
  </div>
</div><!-- #High-Level-Components.blurbSummary -->
