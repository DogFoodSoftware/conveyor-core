#!/bin/bash

# /**
#  * <div id="Default-Values" class="section">
#  * <div class="section-header"><span>Default Values</span></div>
#  */
CONVEYOR_REPO=https://github.com/DogFoodSoftware/conveyor-core.git
CONVEYOR_PLAYGROUND="$HOME/playground"
# /**
#  * </div><!-- #Default-Values.section -->
#  *
#  * <div id="Option-Processing" class="section">
#  * <div class="section-header"><span>Option Processing</span></div>
#  */


function usage() {
    echo "Installs and initializes a Conveyor environment on the host."
    echo
    echo "install [--force]"
    echo
    echo "Options:"
    echo
    echo "--force"
    echo "  Normally, we check that the target system is supported and there is no existing"
    echo "  installation. Forcing the install skips these particular checks. It can be used"
    echo "  to install on self-supported or experimental distros as well as to attempt (a"
    echo "  rather simple) repair of a broken or incomplete install."
    echo
    echo "--attempt-nix-install"
    echo "  Will attempt automated nix install if necessary."
    # echo
    # echo "--checkout-version|--cv"
    # echo "  Specifies the version to use. Note, the nix and git install each use independent"
    # echo "  versions; even for two that would produce the same runtime."
    # echo
    # echo "--playground|-p"
    # echo "  Specifies the location of playground.
    echo
}

FORCE_CORE=false
ATTEMPT_NIX_INSTALL=false
FORCE_DISTRO=false

TMP=`getopt --name=$0 -a --longoptions=force-core,force-distro,attempt-nix-install -o f -- $@`
eval set -- $TMP

until [ $1 == -- ]; do
    case "$1" in
	-f)
	    FORCE_CORE=true
	    FORCE_DISTRO=true;;
	--force-core)
	    FORCE_CORE=true;;
	--attempt-nix-install)
	    ATTEMPT_NIX_INSTALL=true;;
	--force-distro)
	    FORCE_DISTRO=true;;
    esac
    shift
done
shift

DISTRO_INSTALL_OPTIONS=""
if [[ $FORCE_DISTRO == true ]]; then
    DISTRO_INSTALL_OPTIONS="--force"
fi
if [[ $ATTEMPT_NIX_INSTALL == true ]]; then
    DISTRO_INSTALL_OPTIONS="$DISTRO_INSTALL_OPTIONS --attempt-nix-install"
fi

bash <(curl https://raw.githubusercontent.com/DogFoodSoftware/distro/master/install) $DISTRO_INSTALL_OPTIONS

# Need to be able to 'sudo' root for certain operations.  TODO: with
# the adoption of nix, some of the original motives for this are no
# longer true. For SOME use cases it is necessary, but not for basic
# operation. Before release, let's be sure and do test with this
# restriction removed to see how easy it is.
if [[ `sudo -n echo foo 2>/dev/null` != 'foo' ]]; then
    echo "Conveyor expects user to have full 'sudo' no-password privileges." >&2
    PREREQUISITES_GOOD='false'
fi
if [[ $PREREQUISITES_GOOD != 'true' ]]; then
    echo "Consider using using the Conveyor vagrant VM: TODO".
    exit 1
fi
# TODO: do a dry run to check whether we can connect to the git repo.
# /**
#  * </div><!-- #Prerequisite-Checks.section -->
#  */

if nix-env --query --out-path conveyor-core 2>/dev/null; then
    if [[ $FORCE != 'true' ]]; then
	echo "Conveyor-Core already installed. Bailing out." >&2
	exit 2
    else # It is forced; essentiall will check and possibly repair
	 # initial setup.
	echo "Found existing installation. Checking setup..."
    fi
fi

# We need to make the cacert available through our user's nix-profile
# for PHP/composer. It's a bit of a hack, but there you go.
nix-env -i cacert
for i in conveyor-core conveyor-php conveyor-apache conveyor-mysql conveyor-orientdb; do
    nix-env -f "$HOME/.conveyor/subscriptions/dogfoodsoftware.com/default.nix" -iA $i
done
