#!/bin/bash

set -e

# expects to run as root
# TODO: tes th

# /**
#  * <div id="Default-Values" class="section">
#  * <div class="section-header"><span>Default Values</span></div>
#  */
GITHUB_REF=DogFoodSoftware/conveyor-core
PLAYGROUND="$HOME/playground"
CONVEYOR_DATA="$HOME/data"
CONVEYOR_VER="master"
PROJECT_HOME="${PLAYGROUND}/${GITHUB_REF}"
# /**
#  * </div><!-- #Default-Values.section -->
#  *
#  * <div id="Option-Processing" class="section">
#  * <div class="section-header"><span>Option Processing</span></div>
#  */


function usage() {
    echo "Installs and initializes a Conveyor environment on the host."
    echo
    echo "install [--force]"
    echo
    echo "Options:"
    echo
    echo "--force"
    echo "  Normally, we check that the target system is supported and there is no existing"
    echo "  installation. Forcing the install skips these particular checks. It can be used"
    echo "  to install on self-supported or experimental distros as well as to attempt (a"
    echo "  rather simple) repair of a broken or incomplete install."
    echo
    echo "--checkout-version|-c"
    echo "  Specifies the version to use. Note, the nix and git install each use independent"
    echo "  versions; even for two that would produce the same runtime."
    echo
    echo "--playground|-p <dir>"
    echo "  Specifies the location of playground."
    echo
}

FORCE_CORE=false
FORCE_DISTRO=false

TMP=`getopt --name=$0 -a --longoptions=force -o f -- $@`
eval set -- $TMP

until [ $1 == -- ]; do
    case "$1" in
	-f|--force)
	    FORCE_CORE=true;;
	-c|--checkout-version)
	    CHECKOUT_VERSION="$2"
	    shift;;
    esac
    shift
done
shift

PREREQUISITES_GOOD=true
# Need to be able to 'sudo' root for certain operations.  TODO: with
# the adoption of nix, some of the original motives for this are no
# longer true. For SOME use cases it is necessary, but not for basic
# operation. Before release, let's be sure and do test with this
# restriction removed to see how easy it is.
if [[ `sudo -n echo foo 2>/dev/null` != 'foo' ]]; then
    echo "Conveyor expects user to have full 'sudo' no-password privileges." >&2
    PREREQUISITES_GOOD='false'
fi
if [[ $PREREQUISITES_GOOD != 'true' ]]; then
    echo "Consider using using the Conveyor vagrant VM:".
    echo "  curl -o Vagrantfile -fsSL https://raw.githubusercontent.com/DogFoodSoftware/conveyor-core/master/Vagrantfile"
    echo "  vagrant up"
    exit 1
fi
# TODO: do a dry run to check whether we can connect to the git repo.
# /**
#  * </div><!-- #Prerequisite-Checks.section -->
#  */

source /etc/environment
if [ -z $CON_USER ]; then
    # Assume none of the conveyor vars are set.
    sudo bash -c "echo 'export CON_USER=$USER' >> /etc/environment"
    sudo bash -c "echo 'export PLAYGROUND=/home/\$CON_USER/playground' >> /etc/environment"
    sudo bash -c "echo 'export RUNTIME_HOME=/home/\$CON_USER/runtime' >> /etc/environment"
    sudo bash -c "echo 'export DOCUMENTATION_HOME=/home/\$CON_USER/documentation' >> /etc/environment"
    sudo bash -c "echo 'export CONVEYOR_CORE=\$PLAYGROUND/DogFoodSoftware/conveyor-core' >> /etc/environment"
    
    source /etc/environment
fi

for i in "$PLAYGROUND" \
         "$CONVEYOR_DATA/files/css" \
         "$CONVEYOR_DATA/files/js" \
         "$CONVEYOR_DATA/files/fonts" \
         "$CONVEYOR_DATA/conf/html/ui" \
         "$CONVEYOR_DATA/apps"; do
    if [ ! -d "$i" ]; then
	mkdir -p "$i"
    fi
done

sudo apt-get install -y git nginx php5-fpm

cd "$PLAYGROUND"
# We checkout via HTTPS in case the 'ssh-agent' isn't available when
# the script is run; such as when the script is run with an alternate
# user using 'sudo'.
git clone -b $CONVEYOR_VER --depth 1 https://github.com/${GITHUB_REF}.git $GITHUB_REF
# But then swtich to SSH for easy updates for those with authorized keys.
cd "$GITHUB_REF"
git remote set-url origin git@github.com:${GITHUB_REF}.git
source $CONVEYOR_CORE/src/lib/conveyor-libs.sh

con_safe_mkdir \
    $DOCUMENTATION_HOME \
    $DOCUMENTATION_HOME/src \
    $RUNTIME_HOME \
    $RUNTIME_HOME/logs \
    $RUNTIME_HOME/logs/environment \
    /home/$CON_USER/bin

# Link in the HTML template pages.
for i in `ls ${PROJECT_HOME}/conf/html/template-page-*.php`; do
    ln -s "$i" $HOME/data/conf/html/
done

# Link in the REST service configurations.
sudo mkdir -p /etc/nginx/services
sudo chown -R vagrant:vagrant /etc/nginx/service
for i in `ls ${PROJECT_HOME}/conf/service-*.nginx.conf`; do
    ln -s "$i" /etc/nginx/services
done
ln -s "${PROJECT_HOME}/conf/default.minify.php" "$HOME/data/conf/html/"
sudo patch /etc/nginx/fastcgi_params $HOME/playground/DogFoodSoftware/conveyor-core/conf/fastcgi_params.nginx.patch
sudo service nginx restart

# TODO: Really, we should process the file for the directive and append...
sudo patch /etc/php5/fpm/php.ini $HOME/playground/DogFoodSoftware/conveyor-core/conf/php5-fpm-ini.patch
sudo service php5-fpm restart

# Want to do:
# sudo -u vagrant bash -c <(curl -fsSL https://raw...)
# but the user flipping breaks with "can't read /dev/fd/63"; using 'bash -c "$(...)"' messes up the $HOME replacement.
curl -fsSL https://raw.githubusercontent.com/DogFoodSoftware/conveyor-minify/master/install > minify-install.tmp
# In order te got the 'vagrant' environment variables set (e.g., 'sudo' would leave $HOME=/root)
sudo su - vagrant -c "bash $PWD/minify-install.tmp"
rm minify-install.tmp

# Grab default JS.

cd "$CONVEYOR_DATA/files/js"
curl -fsSL http://code.jquery.com/jquery-2.1.4.js > jquery-2.1.4.js
curl -fsSL https://raw.githubusercontent.com/HenrikJoreteg/ICanHaz.js/9b40b59d7ace192741546a2399da3de0cb5ba44f/ICanHaz.js > ICanHaz-0.10.2.js
curl -fsSL https://raw.githubusercontent.com/garand/sticky/7136048f53d11bd2f483fb912e40fda68d99c44a/jquery.sticky.js > jquery.sticky-1.0.3.js

# Setup Bootstrap
cd "$CONVEYOR_DATA/apps"
if [ -d 'twitter-bootstrap' ]; then
    rm -rf twitter-bootstrap
fi
BOOTSTRAP_REV="ab412b2404d12a3c55d1c4b798bd42ef32e80fab"
git clone -o ${BOOTSTRAP_REV} --depth 1 https://github.com/twbs/bootstrap.git bootstrap
ln -s "$CONVEYOR_DATA/apps/bootstrap/dist/js/bootstrap.js" "$CONVEYOR_DATA/files/js/bootstrap-3.3.5.js"

# Setup default style, Liquid-Labs/bi-curious
cd "$PLAYGROUND"
# BI_CURIOUS_REV="099c6b6bc393fb8e0a4ba9f006197c27f37ecd43"
# git clone -o ${BI_CURIOUS_REV} --depth 1 https://github.com/Liquid-Labs/bi-curious.git bi-curious
git clone https://github.com/Liquid-Labs/bi-curious.git Liquid-Labs/bi-curious
cd Liquid-Labs/bi-curious
git remote set-url origin git@github.com:Liquid-Labs/bi-curious.git
sudo npm install -g less
lessc src/less/master.less > $HOME/data/files/css/master.css
mkdir -p $HOME/data/files/images
# TODO: should go ahead and add root-level project for name spacing?
ln -s $HOME/playground/Liquid-Labs/bi-curious/files/images/* $HOME/data/files/images
mkdir -p $HOME/data/fonts
ln -s $CONVEYOR_DATA/apps/bootstrap/fonts/* $CONVEYOR_DATA/files/fonts
