<div class="p">
  A specification specifies the <em>goals of implementation</em>,
  which becomes a <em>normative description of a production
  release</em>. I.e., for a pre-release implementation, the spec is a
  roadmap. After release, it becomes a definitive record.
</div>
<h2>Specification Lifecycle</h2>
<h3>Draft</h3>
<div class="p">
  A <em>draft</em> specification is not yet implemented and may
  potentially change. A draft need not be complete, but there should
  exist documented, actionable items (issues or comments) detailing
  what needs to be done to make it complete.
<div class="p">
  A <em>final draft</em> is thought to be internally consistent and
  complete and is not expected to change. I.e., a draft because until
  implemented in fact, the spec is considered not fully verified, but
  final because all outstanding issues and comments regarding the
  specification itself have been fully resolved.
</div>
<h3>Release</h3>
<div class="p">
  A <em>release specification</em> is believe to fully conform to a
  release that is ready for or in production release. A release
  specification may still be changed to address bugs within the
  specification itself and to keep it in conformance with the
  releassed code. In practice this should be exceedingly rare.
</div>
<h2>Language and Context</h2>
<div class="p">
  A release is written, from the draft stage onward, primarily as if
  it described an existing, implemented system. I.e., as if it were a
  release specification.
</div>
<div class="p" id="re-todos">
  It's fine to insert placeholders and even text (typically set off by
  a 'TODO:') addressing the authors directly, such as "TODO: describe
  XYZ here." Such would be considered a type of issue, easy to capture
  while writing the specification. But typically the language of draft
  spects is describing what will be in the release, just doing so in
  the present tense.
</div>
<div class="p">
  The difference between a non-final draft specification and the
  current state of implementation should be entirely captured in
  durable issues or comments. Precisely how isn't important, though we
  contemplate three basic types when writing this document:
  <ul>
    <li>'TODO' notes in the draft specification
      as <a href="#re-todos">mentioned above,</li>
    <li>meta-comments which preserve a thread and are resolvable, such
      as thoses implemented by Google Docs as of September 2015,
      and</li>
    <li>issue captured in an issue tracker such as Github, Jira,
      etc.</li>
  </ul>
</div>
