<div class="p">
  A specification specifies the <em>goals of implementation</em>,
  which becomes a <em>normative description of a production
  release</em>. I.e., for a pre-release implementation, the spec is a
  roadmap. After release, it becomes a definitive record.
</div>
<h2>Language and Context</h2>
<div class="p">
  The language of a specification is definite, describing the release
  as if it existed and was properly implemented. A draft release may
</div>
<h2>Specification Lifecycle</h2>
<div class="p">
  A <em>draft</em> specification is not yet implemented
  and may potentially change. A <em>final draft</em> is thought to
  be internally consistent and complete and is not expected to change.
</div>

As a style issue, I like to right specs in terms of "this is the spec
for the release", and then implementation catches up. Which this more
or less does, but good to be explicit. This is the spec document, and
then we capture the diff between current implementation and next spec
in issues, other documents, and comments on the spec. Once todo is
done, the code is rel
