Issue management and planning is primarily done with:

- availability,
- , and
- skill set.

In addition, we also deal with two secondary attributes:

- priority and
- project component.

Issue planners deal with the whole set of issues, making sure issue are fully
defined and correctly reference other issues. Developers, system admins,
technical writers and other issues consumers pick off the available issues
according to their skill set, phase, and priority.

== Issue DB and Management Tools ==

While the process may be used with various tools, we explicitly support Github
+ Codetree. Atlassian's JIRA product is also known to be compatible with the
process.

== Issue Specification ==

=== Availability ===

An issue is considered available if it has no unmet dependencies and is not
labeled as 'draft'. Any available issue is available to be worked and may be
selected. Generally workers should prefer issues matching their skill set in
the earliest incomplete project phase.

=== Project Phase ===

The project phase define iterative 'goals sets' for the project. "By phase
one, we will achieve features P and Q, by phase two, we will achieve X and Y."
Note that we use "phases" rather than dates as we envision planning as a
bottom up process in which we identify "first this, then that" independent of
external dates.

==== Release Planning ====

Release planning beigns with a first draft of issues broken into "MVP",
"Bonus", and "Release" milestones. If you think in terms of "Alpha-Beta-Gold",
it's similary.

The process begins by talking about the release goals, which are captured in
the "X.Y Release" milestone issues, or may be immediately sorted into the "X.Y
MVP" and "X.Y Bonus" milestones. Either way, the goal is to enumerate a good
portion of the foreseeable or hoped-for goals.

Once a workable first draft of goals and obvious work is defined, the issues
are reviewed. Absolutely necessary user features are placed in the MVP
milestone. All other user features are sorted to the Bonus
milestone. Optimizations, polish, documentation as well as test and "external"
issues (e.g.: license acquisitions) are generally sorted to the Release
milestone, though there is no hard and fast rule.

Generally, workers should prefer "MVP" over "Bonus" over "Release". However,
workers may generally choose any available issue and are encouraged to apply
their particular knowledge of and beleifes regarding the release cycle to
issue selection.

==== Other Milestones ====

Planning projects is messy, so feel free to augment and replace the standard
milestones as necessary. Add dditional iterations for big releases. Break big
lists up into related feature sets. 
