#!/home/user/.conveyor/runtime/dogfoodsoftware.com/conveyor-php/bin/php
<?php
function usage($err_msg = null) {
    if ($err_msg != null) {
        # In CLI, we expect 'error_log' to go to stderr.
        error_log("ERROR: $err_msg\n");
    }
    
    echo "usage: con [action] <resource or item ID> [[param1=value1]...] '{<json payload>}'\n";
}

function process_params_and_data() {
    global $process_index;
    global $argc;
    global $argv;
    global $req_data;
    global $req_parameters;

    while ($process_index < $argc) {
        $argument = $argv[$process_index];
        if (preg_match("/{/", $argument)) { // JSON data payload
            // The data payload must come last.
            if ($process_index + 1 != $argc) {
                usage("JSON data payload must be last element of request.");
                exit(400);
            }
            
            $req_data = json_decode($argument, true);
            if ($req_data == null) {
                usage("Last argument seemed like JSON data payload, but could not be parsed.");
                exit(400);
            }
        }
        else { // Attempt to parse argument as a request parameter.
            $bits = explode('=', $argument);
            $param_name = trim(array_shift($bits));
            if (!preg_match('/^[\w-]+$/', $param_name)) {
                usage("Disallowed parameter name: '$param_name'; must match /[\w-]/.");
                exit(400);
            }

            if (count($bits) > 0) {
                // Notice we do support something like: 'foo=bar=baz';
                // that would parse as parameter 'foo' with value
                // 'bar=baz'.
                $param_value = trim(implode('=', $bits));
            }
            else {
                $param_value = true;
            }

            $req_parameters[$param_name] = $param_value;
        }

        $process_index += 1;
    }
}

// Parse arguments.
$req_action = $argv[1];
if (preg_match('/PUT|GET|POST|PATCH|GET|DELETE/i', $req_action)) {
    $req_action = strtoupper($action);
    $process_index = 2;
}
else {
    $req_action = 'GET';
    $process_index = 1;
}

$req_accept = ($req_action == 'GET' ? 'text/plain' : 'application/json');

$req_path = $argv[$process_index];
if (empty($req_path)) {
    # Special handling for just typing 'con'; not really valid, but no
    # need to be dicks about that. Give the user something useful.
    $req_path = '/documentation/system/CLI-Help';
}
$process_index += 1;

# Accepts bear resource name, e.g. 'foo' , as well as '/foo', '/foo/',
#  and 'foo/'. Item IDs may not end with a '/'.
if (!preg_match('|/?([\w-]+)(/$)?(/+[\w-]+)*|', $req_path, $matches)) {
    usage("Could not parse '$req_path' as valid request.");
    exit(400);
}
$req_resource = strtolower($matches[1]);
$req_item_id = substr(strtolower($matches[3]), 1);
// We will defer processing of the '$req_parameters' and '$req_data'
// variables until we match the resource.
$req_parameters = array();
$req_data = null;

// No need to cache, this is very low flow CLI at the moment.
$home = $_ENV['HOME'];
exec('find '.$home.'/.conveyor/runtime -follow -path "*/src/domain-logic/*" -type d', $output);
foreach ($output as $handler_path) {
    $resource = basename($handler_path);
    if ($resource == $req_resource) {
        $handler = empty($req_item_id) ? 'get-all' : 'get-item';

        if (!file_exists("$handler_path/${handler}.php")) {
            error_log("ERROR: Did not find expected '$handler' handler for '$req_path'.\n");
            exit(501);
        }
        process_params_and_data();

        require("$handler_path/$handler.php");
        require("$home/.conveyor/runtime/dogfoodsoftware.com/conveyor-core/runnable/lib/json-to-text.php");
        if ($response->get_status() == 200) {
            exit(0);
        }
        else {
            exit($response->get_status());
        }
    }
}

// If we fall out of the 'foreach' above, it means no handler was
// found.
error_log("ERROR: '$req_path' not found. (No handler.)");
exit(404);
?>
